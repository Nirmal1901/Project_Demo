{
  "name": "Automated Email Flow",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "38d8af14-633c-41ea-9cee-c0e5dc3850bd",
      "name": "Email Trigger (IMAP)",
      "type": "n8n-nodes-base.emailReadImap",
      "typeVersion": 2,
      "position": [
        -120,
        380
      ],
      "credentials": {
        "imap": {
          "id": "V6HrbrLFOov8akZD",
          "name": "IMAP account 3"
        }
      }
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "Body",
              "stringValue": "={{ $json.textPlain }}"
            },
            {
              "name": "Subject",
              "stringValue": "={{ $json.subject }}"
            },
            {
              "name": "FromEmail",
              "stringValue": "={{ $json.metadata['return-path'] }}"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "37168547-f625-4f7e-9a2b-a989da7498fa",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        40,
        380
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "5e69aa0c-c8f9-463b-83ca-fea5badfa73d",
      "name": "Ollama Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        560,
        420
      ],
      "credentials": {
        "ollamaApi": {
          "id": "u6FLNIa9pUbTy6xL",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "=developernirmalnathani@gmail.com",
        "toEmail": "={{ $json.FromEmaill }}",
        "subject": "Bot Reply!",
        "emailFormat": "text",
        "text": "={{ $json.text }}",
        "options": {
          "appendAttribution": false
        }
      },
      "id": "c50ba43c-94fe-4dc6-ac47-494651438858",
      "name": "Send Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        2340,
        1060
      ],
      "credentials": {
        "smtp": {
          "id": "BwKzQfjLlADjMjuf",
          "name": "SMTP account 3"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Input text containing subject and content\nconst inputText = $json.text; // Assuming `text` contains the email body\n\n// Extracting subject and content\nlet subject = \"\";\nlet content = \"\";\n\n// Find the index of the first occurrence of \"\\n\\n\" to separate subject and content\nconst separatorIndex = inputText.indexOf(\"\\n\\n\");\n\n// Check if the separator exists\nif (separatorIndex !== -1) {\n    // Extract subject and content based on the separator\n    subject = inputText.substring(0, separatorIndex).replace(\"Subject:\", \"\").trim();\n    content = inputText.substring(separatorIndex + 2).trim();\n\n    // Remove \"Body:\" from the content\n    content = content.replace(\"Body:\", \"\").trim();\n} else {\n    // If separator not found, treat the entire text as content\n    subject = \"No subject found\";\n    content = inputText.replace(/\\n/g, \"\").trim();\n}\n\n// Output subject and content\nreturn {\n    subject: subject,\n    content: content\n};\n"
      },
      "id": "77ef8809-881d-4e22-bd8b-4ec233c0f339",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2340,
        600
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "text",
              "stringValue": "={{ $json.text }}"
            },
            {
              "name": "FromEmaill",
              "stringValue": "={{ $('Edit Fields').item.json.FromEmail }}"
            }
          ]
        },
        "options": {}
      },
      "id": "44cc5f45-5a8d-48be-97cc-2d9bef913973",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        2120,
        960
      ]
    },
    {
      "parameters": {
        "prompt": "={{ $json.Body }}",
        "messages": {
          "messageValues": [
            {
              "message": "Your job is to create a reply regarding the ticket raised by the employee. Provide the subject and body of the Email in just 50 words."
            }
          ]
        }
      },
      "id": "64bb0e29-0243-404f-97a8-8bc6bb3f5e78",
      "name": "Basic LLM Chain",
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.3,
      "position": [
        560,
        200
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "3e57dad2-dae1-4c28-b486-902fa18ca582",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        980,
        1260
      ],
      "credentials": {
        "openAiApi": {
          "id": "nWOcyRwVRHFbqRWR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "options": {
          "splitPages": true
        }
      },
      "id": "a748bff7-34a9-4d3d-a611-0a862cc3e0c1",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        1080,
        1420
      ]
    },
    {
      "parameters": {
        "chunkOverlap": 200
      },
      "id": "991fa901-7de0-4ac3-9a8d-9f18265f536c",
      "name": "Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1080,
        1640
      ]
    },
    {
      "parameters": {
        "query": "={{ $json.Body }}",
        "options": {}
      },
      "id": "590f7739-3597-4810-bd6c-14e5fa355dd5",
      "name": "Question and Answer Chain",
      "type": "@n8n/n8n-nodes-langchain.chainRetrievalQa",
      "typeVersion": 1.2,
      "position": [
        1720,
        1200
      ]
    },
    {
      "parameters": {},
      "id": "5459c603-feee-4bbf-bd45-44b1d8cab337",
      "name": "Vector Store Retriever",
      "type": "@n8n/n8n-nodes-langchain.retrieverVectorStore",
      "typeVersion": 1,
      "position": [
        1900,
        1440
      ]
    },
    {
      "parameters": {
        "chunkOverlap": 200,
        "options": {}
      },
      "id": "fa6030b8-6b0b-495b-83df-999b3a0e8650",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        1280,
        1640
      ]
    },
    {
      "parameters": {},
      "id": "12c2c65c-3638-4e1e-9d60-c81579f1f00f",
      "name": "In-Memory Vector Store1",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
      "typeVersion": 1,
      "position": [
        2280,
        1440
      ]
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "pageContent"
            }
          ]
        },
        "options": {}
      },
      "id": "1f9716b5-452b-4612-bec0-edfaf70d451c",
      "name": "Aggregate",
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1580,
        1040
      ]
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "https://workflow.aeriestechnology.com/webhook/27b8c844-fadc-4184-b873-def862ae8d32/chat",
        "options": {}
      },
      "id": "b8144208-bed0-472a-af06-ba3773dcd544",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1840,
        1020
      ]
    },
    {
      "parameters": {
        "mode": "insert"
      },
      "id": "acb8c12d-2ea3-4077-9325-de956d888c89",
      "name": "In-Memory Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
      "typeVersion": 1,
      "position": [
        800,
        860
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "926bf1bb-9b98-43d3-8c0b-74887ff9895e",
      "name": "Embeddings HuggingFace Inference",
      "type": "@n8n/n8n-nodes-langchain.embeddingsHuggingFaceInference",
      "typeVersion": 1,
      "position": [
        740,
        1380
      ],
      "credentials": {
        "huggingFaceApi": {
          "id": "vyQKiLubpAZweujL",
          "name": "HuggingFaceApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "bf01a4a8-f8b1-41ab-8bf1-40539bec95b3",
      "name": "Embeddings HuggingFace Inference1",
      "type": "@n8n/n8n-nodes-langchain.embeddingsHuggingFaceInference",
      "typeVersion": 1,
      "position": [
        2160,
        1660
      ],
      "credentials": {
        "huggingFaceApi": {
          "id": "vyQKiLubpAZweujL",
          "name": "HuggingFaceApi account"
        }
      }
    },
    {
      "parameters": {
        "model": "mistral:latest",
        "options": {}
      },
      "id": "409d4a48-e334-47b8-95f2-45cddeb6ffbe",
      "name": "Ollama Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        1720,
        1420
      ],
      "credentials": {
        "ollamaApi": {
          "id": "u6FLNIa9pUbTy6xL",
          "name": "Ollama account"
        }
      }
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "text",
              "stringValue": "={{ $json.response.text }}"
            }
          ]
        },
        "include": "selected",
        "options": {}
      },
      "id": "02f96c1a-001d-411d-89b6-2ff4abc487da",
      "name": "Edit Fields2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.2,
      "position": [
        2060,
        1200
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "84fd2871-50af-430f-a9db-85be8fd14cfc",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "48b6102e-ab00-40ca-bdae-c896e716e2b7",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [
        560,
        860
      ],
      "webhookId": "84fd2871-50af-430f-a9db-85be8fd14cfc"
    }
  ],
  "pinData": {},
  "connections": {
    "Email Trigger (IMAP)": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Question and Answer Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "In-Memory Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Question and Answer Chain": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Retriever": {
      "ai_retriever": [
        [
          {
            "node": "Question and Answer Chain",
            "type": "ai_retriever",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "In-Memory Vector Store1": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Retriever",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "In-Memory Vector Store": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings HuggingFace Inference": {
      "ai_embedding": [
        [
          {
            "node": "In-Memory Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings HuggingFace Inference1": {
      "ai_embedding": [
        [
          {
            "node": "In-Memory Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Question and Answer Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "In-Memory Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "95696e5f-458f-4893-99b6-f60294d32363",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "3f2bfeeb9154875b428bba7f0ed8dd8436767c35b90ad3df1c32cfd130cb2ac9"
  },
  "id": "XmHWVULsQ3WsRtTN",
  "tags": []
}